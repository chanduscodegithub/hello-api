name: Build and Deploy

on:
  push:
    branches: [dev]

env:
 
  CONNECTEDAPPCLIENTID: ${{ secrets.CONNECTEDAPPCLIENTID }}
  CONNECTEDAPPCLIENTSECRET: ${{ secrets.CONNECTEDAPPCLIENTSECRET }}  
  target: ${{ vars.TARGET }} 
  replicas: ${{ vars.REPLICAS }} 
  vCores: ${{ vars.VCORES }} 
  businessGroup: ${{ vars.BUSINESSGROUP }} 
  businessGroupId: ${{ vars.BUSINESSGROUPID }} 
 
  envname: ${{ vars.ENVNAME }}
  
  anypointplatformclientid: ${{ secrets.ANYPOINTPLATFORMCLIENTID }}
  anypointplatformclientsecret: ${{ secrets.ANYPOINTPLATFORMCLIENTSECRET }}
  muleVersion: ${{ vars.muleVersion }}

jobs:
  BuildAndDeployToDev:
    runs-on: ubuntu-latest
    environment:
      name: Dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Environment Variables
        run: |
          echo "connectedAppClientId=${{ env.CONNECTEDAPPCLIENTID }}" >> $GITHUB_ENV
          echo "connectedAppClientSecret=${{ env.CONNECTEDAPPCLIENTSECRET }}" >> $GITHUB_ENV        
          echo "target=${{ env.target }}" >> $GITHUB_ENV
          echo "replicas=${{ env.replicas }}" >> $GITHUB_ENV
          echo "vCores=${{ env.vCores }}" >> $GITHUB_ENV
          echo "businessGroup=${{ env.businessGroup }}" >> $GITHUB_ENV
          echo "businessGroupId=${{ env.businessGroupId }}" >> $GITHUB_ENV         
         
          echo "anypointplatformclientid=${{ env.anypointplatformclientid }}" >> $GITHUB_ENV
          echo "anypointplatformclientsecret=${{ env.anypointplatformclientsecret }}" >> $GITHUB_ENV
          echo "envname=${{env.envname}}" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package -s ../.maven/settings.xml
      - name: Upload Asset to Exchange        
        
       
        run: |
         
         artifactName=$(ls *.jar | head -1)
         mvn deploy \
         -s ../.maven/settings.xml \
         -Dmule.artifact=$artifactName \
         -DskipTests \

      - name: Deploy with Maven
        run: mvn -B deploy -DmuleDeploy -s .maven/settings.xml
